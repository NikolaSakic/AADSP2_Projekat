1     	 0000					.public _coeffs
2     	 0000					.extern _history_global
3     	 0000					.extern _p_state_global
4     	 0000					.public _fir_circular
5     	 0000					.public _processing
6     							.xdata_ovly
6      >> start of macro: .xdata_ovly
1+    									seg_single , "X_OVLY", X
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_X_ )
2+    						    segment
3+    						  .else
4+    						    segment "X_OVLY"
5+    							.if "" != ""
6+    						___SegStart_X_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .xdata_ovly
7     	 0000				__extractedConst_0_1
8     	 0000					.dw  (0x50c335df)
	 0000	 50C335DF	 
9     							.ydata_ovly align 128
9      >> start of macro: .ydata_ovly align
1+    									seg_align , "Y_OVLY", Y, 128
1+     >> start of macro: seg_align
1+    						    SEGMENT "Y_OVLY" ALIGN( 128 )
2+    						  .if "" != ""
3+    						___SegStart_Y_
4+    						  .endif
5+    							#RememberSegmentType
6+     >> end of macro: seg_align
2+     >> end of macro: .ydata_ovly align
10    	 0000				_coeffs
11    	 0000					.dw  (0xffbc007c)
	 0000	 FFBC007C	 
12    	 0001					.dw  (0xffb8af37)
	 0001	 FFB8AF37	 
13    	 0002					.dw  (0xffb54364)
	 0002	 FFB54364	 
14    	 0003					.dw  (0xffb1bce3)
	 0003	 FFB1BCE3	 
15    	 0004					.dw  (0xffae1b9e)
	 0004	 FFAE1B9E	 
16    	 0005					.dw  (0xffaa5f89)
	 0005	 FFAA5F89	 
17    	 0006					.dw  (0xffa688a1)
	 0006	 FFA688A1	 
18    	 0007					.dw  (0xffa296f3)
	 0007	 FFA296F3	 
19    	 0008					.dw  (0xff9e8a94)
	 0008	 FF9E8A94	 
20    	 0009					.dw  (0xff9a63a8)
	 0009	 FF9A63A8	 
21    	 000A					.dw  (0xff962261)
	 000A	 FF962261	 
22    	 000B					.dw  (0xff91c6fd)
	 000B	 FF91C6FD	 
23    	 000C					.dw  (0xff8d51cb)
	 000C	 FF8D51CB	 
24    	 000D					.dw  (0xff88c328)
	 000D	 FF88C328	 
25    	 000E					.dw  (0xff841b82)
	 000E	 FF841B82	 
26    	 000F					.dw  (0xff7f5b56)
	 000F	 FF7F5B56	 
27    	 0010					.dw  (0xff7a8333)
	 0010	 FF7A8333	 
28    	 0011					.dw  (0xff7593ba)
	 0011	 FF7593BA	 
29    	 0012					.dw  (0xff708d9f)
	 0012	 FF708D9F	 
30    	 0013					.dw  (0xff6b71a9)
	 0013	 FF6B71A9	 
31    	 0014					.dw  (0xff6640b1)
	 0014	 FF6640B1	 
32    	 0015					.dw  (0xff60fba7)
	 0015	 FF60FBA7	 
33    	 0016					.dw  (0xff5ba38e)
	 0016	 FF5BA38E	 
34    	 0017					.dw  (0xff56397f)
	 0017	 FF56397F	 
35    	 0018					.dw  (0xff50beaa)
	 0018	 FF50BEAA	 
36    	 0019					.dw  (0xff4b3454)
	 0019	 FF4B3454	 
37    	 001A					.dw  (0xff459bdc)
	 001A	 FF459BDC	 
38    	 001B					.dw  (0xff3ff6b5)
	 001B	 FF3FF6B5	 
39    	 001C					.dw  (0xff3a466e)
	 001C	 FF3A466E	 
40    	 001D					.dw  (0xff348cac)
	 001D	 FF348CAC	 
41    	 001E					.dw  (0xff2ecb30)
	 001E	 FF2ECB30	 
42    	 001F					.dw  (0xff2903d2)
	 001F	 FF2903D2	 
43    	 0020					.dw  (0xff233887)
	 0020	 FF233887	 
44    	 0021					.dw  (0xff1d6b5c)
	 0021	 FF1D6B5C	 
45    	 0022					.dw  (0xff179e7a)
	 0022	 FF179E7A	 
46    	 0023					.dw  (0xff11d426)
	 0023	 FF11D426	 
47    	 0024					.dw  (0xff0c0ebf)
	 0024	 FF0C0EBF	 
48    	 0025					.dw  (0xff0650c2)
	 0025	 FF0650C2	 
49    	 0026					.dw  (0xff009cc7)
	 0026	 FF009CC7	 
50    	 0027					.dw  (0xfefaf581)
	 0027	 FEFAF581	 
51    	 0028					.dw  (0xfef55dc1)
	 0028	 FEF55DC1	 
52    	 0029					.dw  (0xfeefd874)
	 0029	 FEEFD874	 
53    	 002A					.dw  (0xfeea68a3)
	 002A	 FEEA68A3	 
54    	 002B					.dw  (0xfee51175)
	 002B	 FEE51175	 
55    	 002C					.dw  (0xfedfd62b)
	 002C	 FEDFD62B	 
56    	 002D					.dw  (0xfedaba23)
	 002D	 FEDABA23	 
57    	 002E					.dw  (0xfed5c0d9)
	 002E	 FED5C0D9	 
58    	 002F					.dw  (0xfed0ede2)
	 002F	 FED0EDE2	 
59    	 0030					.dw  (0xfecc44f0)
	 0030	 FECC44F0	 
60    	 0031					.dw  (0xfec7c9cf)
	 0031	 FEC7C9CF	 
61    	 0032					.dw  (0xfec38067)
	 0032	 FEC38067	 
62    	 0033					.dw  (0xfebf6cb8)
	 0033	 FEBF6CB8	 
63    	 0034					.dw  (0xfebb92dd)
	 0034	 FEBB92DD	 
64    	 0035					.dw  (0xfeb7f709)
	 0035	 FEB7F709	 
65    	 0036					.dw  (0xfeb49d85)
	 0036	 FEB49D85	 
66    	 0037					.dw  (0xfeb18ab5)
	 0037	 FEB18AB5	 
67    	 0038					.dw  (0xfeaec30f)
	 0038	 FEAEC30F	 
68    	 0039					.dw  (0xfeac4b1f)
	 0039	 FEAC4B1F	 
69    	 003A					.dw  (0xfeaa2786)
	 003A	 FEAA2786	 
70    	 003B					.dw  (0xfea85cf6)
	 003B	 FEA85CF6	 
71    	 003C					.dw  (0xfea6f033)
	 003C	 FEA6F033	 
72    	 003D					.dw  (0xfea5e60f)
	 003D	 FEA5E60F	 
73    	 003E					.dw  (0xfea5436d)
	 003E	 FEA5436D	 
74    	 003F					.dw  (0x7ea377bb)
	 003F	 7EA377BB	 
75    	 0040					.dw  (0xfea5436d)
	 0040	 FEA5436D	 
76    	 0041					.dw  (0xfea5e60f)
	 0041	 FEA5E60F	 
77    	 0042					.dw  (0xfea6f033)
	 0042	 FEA6F033	 
78    	 0043					.dw  (0xfea85cf6)
	 0043	 FEA85CF6	 
79    	 0044					.dw  (0xfeaa2786)
	 0044	 FEAA2786	 
80    	 0045					.dw  (0xfeac4b1f)
	 0045	 FEAC4B1F	 
81    	 0046					.dw  (0xfeaec30f)
	 0046	 FEAEC30F	 
82    	 0047					.dw  (0xfeb18ab5)
	 0047	 FEB18AB5	 
83    	 0048					.dw  (0xfeb49d85)
	 0048	 FEB49D85	 
84    	 0049					.dw  (0xfeb7f709)
	 0049	 FEB7F709	 
85    	 004A					.dw  (0xfebb92dd)
	 004A	 FEBB92DD	 
86    	 004B					.dw  (0xfebf6cb8)
	 004B	 FEBF6CB8	 
87    	 004C					.dw  (0xfec38067)
	 004C	 FEC38067	 
88    	 004D					.dw  (0xfec7c9cf)
	 004D	 FEC7C9CF	 
89    	 004E					.dw  (0xfecc44f0)
	 004E	 FECC44F0	 
90    	 004F					.dw  (0xfed0ede2)
	 004F	 FED0EDE2	 
91    	 0050					.dw  (0xfed5c0d9)
	 0050	 FED5C0D9	 
92    	 0051					.dw  (0xfedaba23)
	 0051	 FEDABA23	 
93    	 0052					.dw  (0xfedfd62b)
	 0052	 FEDFD62B	 
94    	 0053					.dw  (0xfee51175)
	 0053	 FEE51175	 
95    	 0054					.dw  (0xfeea68a3)
	 0054	 FEEA68A3	 
96    	 0055					.dw  (0xfeefd874)
	 0055	 FEEFD874	 
97    	 0056					.dw  (0xfef55dc1)
	 0056	 FEF55DC1	 
98    	 0057					.dw  (0xfefaf581)
	 0057	 FEFAF581	 
99    	 0058					.dw  (0xff009cc7)
	 0058	 FF009CC7	 
100   	 0059					.dw  (0xff0650c2)
	 0059	 FF0650C2	 
101   	 005A					.dw  (0xff0c0ebf)
	 005A	 FF0C0EBF	 
102   	 005B					.dw  (0xff11d426)
	 005B	 FF11D426	 
103   	 005C					.dw  (0xff179e7a)
	 005C	 FF179E7A	 
104   	 005D					.dw  (0xff1d6b5c)
	 005D	 FF1D6B5C	 
105   	 005E					.dw  (0xff233887)
	 005E	 FF233887	 
106   	 005F					.dw  (0xff2903d2)
	 005F	 FF2903D2	 
107   	 0060					.dw  (0xff2ecb30)
	 0060	 FF2ECB30	 
108   	 0061					.dw  (0xff348cac)
	 0061	 FF348CAC	 
109   	 0062					.dw  (0xff3a466e)
	 0062	 FF3A466E	 
110   	 0063					.dw  (0xff3ff6b5)
	 0063	 FF3FF6B5	 
111   	 0064					.dw  (0xff459bdc)
	 0064	 FF459BDC	 
112   	 0065					.dw  (0xff4b3454)
	 0065	 FF4B3454	 
113   	 0066					.dw  (0xff50beaa)
	 0066	 FF50BEAA	 
114   	 0067					.dw  (0xff56397f)
	 0067	 FF56397F	 
115   	 0068					.dw  (0xff5ba38e)
	 0068	 FF5BA38E	 
116   	 0069					.dw  (0xff60fba7)
	 0069	 FF60FBA7	 
117   	 006A					.dw  (0xff6640b1)
	 006A	 FF6640B1	 
118   	 006B					.dw  (0xff6b71a9)
	 006B	 FF6B71A9	 
119   	 006C					.dw  (0xff708d9f)
	 006C	 FF708D9F	 
120   	 006D					.dw  (0xff7593ba)
	 006D	 FF7593BA	 
121   	 006E					.dw  (0xff7a8333)
	 006E	 FF7A8333	 
122   	 006F					.dw  (0xff7f5b56)
	 006F	 FF7F5B56	 
123   	 0070					.dw  (0xff841b82)
	 0070	 FF841B82	 
124   	 0071					.dw  (0xff88c328)
	 0071	 FF88C328	 
125   	 0072					.dw  (0xff8d51cb)
	 0072	 FF8D51CB	 
126   	 0073					.dw  (0xff91c6fd)
	 0073	 FF91C6FD	 
127   	 0074					.dw  (0xff962261)
	 0074	 FF962261	 
128   	 0075					.dw  (0xff9a63a8)
	 0075	 FF9A63A8	 
129   	 0076					.dw  (0xff9e8a94)
	 0076	 FF9E8A94	 
130   	 0077					.dw  (0xffa296f3)
	 0077	 FFA296F3	 
131   	 0078					.dw  (0xffa688a1)
	 0078	 FFA688A1	 
132   	 0079					.dw  (0xffaa5f89)
	 0079	 FFAA5F89	 
133   	 007A					.dw  (0xffae1b9e)
	 007A	 FFAE1B9E	 
134   	 007B					.dw  (0xffb1bce3)
	 007B	 FFB1BCE3	 
135   	 007C					.dw  (0xffb54364)
	 007C	 FFB54364	 
136   	 007D					.dw  (0xffb8af37)
	 007D	 FFB8AF37	 
137   	 007E					.dw  (0xffbc007c)
	 007E	 FFBC007C	 
138   	 007F					.dw  (0xffbf375f)
	 007F	 FFBF375F	 
139   							.code_ovly
139    >> start of macro: .code_ovly
1+    									seg_single , "CODE_OVLY", CODE
1+     >> start of macro: seg_single
1+    						  .if ( "" != "" ) & defined( ___SegStart_CODE_ )
2+    						    segment
3+    						  .else
4+    						    segment "CODE_OVLY"
5+    							.if "" != ""
6+    						___SegStart_CODE_
7+    							.endif
8+    						  .endif
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .code_ovly
140   						
141   						
142   						
143   	 0000				_fir_circular:			/* LN: 141 | CYCLE: 0 | RULES: () */ 
144   	 0000	 BB540007		xmem[i7] = i7			# LN: 141 | 
145   	 0001	 020F7FFF		i7 += 1			# LN: 141 | 
146   	 0002	 87750009		i7 = i7 + (0x9)			# LN: 141 | 
147   	 0003	 90750001		i0 = i7 - (0x1)			# LN: 141 | 
148   	 0004	 98540000		xmem[i0] = a0h			# LN: 141 | 
149   	 0005	 90750002		i0 = i7 - (0x2)			# LN: 141 | 
150   	 0006	 99540000		xmem[i0] = a1h			# LN: 141 | 
151   	 0007				cline_141_0:			/* LN: 145 | CYCLE: 0 | RULES: () */ 
152   	 0007	 90750002		i0 = i7 - (0x2)			# LN: 145 | 
153   	 0008	 88140000		a0 = xmem[i0]			# LN: 145 | 
154   	 0009	 00004F80		a0 = a0 << 8			# LN: 145 | 
155   	 000A	 00004E40		a0 = a0 >> 1			# LN: 145 | 
156   	 000B	 907A0000		a0l = (0x0)			# LN: 145 | 
157   	 000C	 48707FFF		i0 = a0			# LN: 145 | 
158   	 000D	 91750003		i1 = i7 - (0x3)			# LN: 145 | 
159   	 000E	 80050000		i0 = i0 + (_history_global + 0)			# LN: 145 | 
160   	 000F	 B0540001		xmem[i1] = i0			# LN: 145 | 
161   	 0010				cline_145_0:			/* LN: 146 | CYCLE: 0 | RULES: () */ 
162   	 0010	 90750002		i0 = i7 - (0x2)			# LN: 146 | 
163   	 0011	 88140000		a0 = xmem[i0]			# LN: 146 | 
164   	 0012	 48707FFF		i0 = a0			# LN: 146 | 
165   	 0013	 91750004		i1 = i7 - (0x4)			# LN: 146 | 
166   	 0014	 80050000		i0 = i0 + (_p_state_global + 0)			# LN: 146 | 
167   	 0015	 B0540001		xmem[i1] = i0			# LN: 146 | 
168   	 0016				cline_146_0:			/* LN: 152 | CYCLE: 0 | RULES: () */ 
169   	 0016	 90750003		i0 = i7 - (0x3)			# LN: 152 | 
170   	 0017	 88140000		a0 = xmem[i0]			# LN: 152 | 
171   	 0018	 90750005		i0 = i7 - (0x5)			# LN: 152 | 
172   	 0019	 88540000		xmem[i0] = a0			# LN: 152 | 
173   	 001A				cline_152_0:			/* LN: 153 | CYCLE: 0 | RULES: () */ 
174   	 001A	 90750006		i0 = i7 - (0x6)			# LN: 153 | 
175   	 001B	 884A0000		uhalfword(a0) = (_coeffs + 0)			# LN: 153 | 
176   	 001C	 88540000		xmem[i0] = a0			# LN: 153 | 
177   	 001D				cline_153_0:			/* LN: 155 | CYCLE: 0 | RULES: () */ 
178   	 001D	 90750004		i0 = i7 - (0x4)			# LN: 155 | 
179   	 001E	 B0140000		i0 = xmem[i0]			# LN: 155 | 
180   	 001F	 91750007		i1 = i7 - (0x7)			# LN: 155 | 
181   	 0020	 88140000		a0 = xmem[i0]			# LN: 155 | 
182   	 0021	 98540001		xmem[i1] = a0h			# LN: 155 | 
183   	 0022				cline_155_0:			/* LN: 162 | CYCLE: 0 | RULES: () */ 
184   	 0022	 90750007		i0 = i7 - (0x7)			# LN: 162 | 
185   	 0023	 88140000		a0 = xmem[i0]			# LN: 162 | 
186   	 0024	 90750005		i0 = i7 - (0x5)			# LN: 162 | 
187   	 0025	 89140000		a1 = xmem[i0]			# LN: 162 | 
188   	 0026	 00004480		a0 = a1 + a0			# LN: 162 | 
189   	 0027	 98090030		AnyReg(i0, a0h)			# LN: 162 | 
190   	 0028	 91750005		i1 = i7 - (0x5)			# LN: 162 | 
191   	 0029	 B0540001		xmem[i1] = i0			# LN: 162 | 
192   	 002A				cline_162_0:			/* LN: 163 | CYCLE: 0 | RULES: () */ 
193   	 002A	 90750001		i0 = i7 - (0x1)			# LN: 163 | 
194   	 002B	 91750005		i1 = i7 - (0x5)			# LN: 163 | 
195   	 002C	 B1140001		i1 = xmem[i1]			# LN: 163 | 
196   	 002D	 88140000		a0 = xmem[i0]			# LN: 163 | 
197   	 002E	 98540001		xmem[i1] = a0h			# LN: 163 | 
198   	 002F				cline_163_0:			/* LN: 166 | CYCLE: 0 | RULES: () */ 
199   	 002F	 90750007		i0 = i7 - (0x7)			# LN: 166 | 
200   	 0030	 88140000		a0 = xmem[i0]			# LN: 166 | 
201   	 0031	 894A0001		uhalfword(a1) = (0x1)			# LN: 166 | 
202   	 0032	 00004408		a0 = a0 + a1			# LN: 166 | 
203   	 0033	 90750007		i0 = i7 - (0x7)			# LN: 166 | 
204   	 0034	 98540000		xmem[i0] = a0h			# LN: 166 | 
205   	 0035	 90750007		i0 = i7 - (0x7)			# LN: 166 | 
206   	 0036	 88140000		a0 = xmem[i0]			# LN: 166 | 
207   	 0037	 894A0080		uhalfword(a1) = (0x80)			# LN: 166 | 
208   	 0038	 00004448		a0 = a0 - a1			# LN: 166 | 
209   	 0039	 8488003E		if (a < 0) jmp (else_0)			# LN: 166 | 
210   	 003A				cline_166_0:			/* LN: 168 | CYCLE: 0 | RULES: () */ 
211   	 003A	 90750007		i0 = i7 - (0x7)			# LN: 168 | 
212   	 003B	 00004DC0		a0 = 0			# LN: 168 | 
213   	 003C	 98540000		xmem[i0] = a0h			# LN: 168 | 
214   	 003D	 8008003E		jmp (endif_0)			# LN: 168 | 
215   	 003E				cline_168_0:			/* LN: 172 | CYCLE: 0 | RULES: () */ 
216   	 003E				endif_0:			/* LN: 166 | CYCLE: 0 | RULES: () */ 
217   	 003E				else_0:			/* LN: 166 | CYCLE: 0 | RULES: () */ 
218   	 003E	 90750008		i0 = i7 - (0x8)			# LN: 172 | 
219   	 003F	 00004DC0		a0 = 0			# LN: 172 | 
220   	 0040	 98540000		xmem[i0] = a0h			# LN: 172 | 
221   	 0041				cline_172_0:			/* LN: 175 | CYCLE: 0 | RULES: () */ 
222   	 0041	 90750006		i0 = i7 - (0x6)			# LN: 175 | 
223   	 0042	 884A007F		uhalfword(a0) = (_coeffs + 127)			# LN: 175 | 
224   	 0043	 88540000		xmem[i0] = a0			# LN: 175 | 
225   	 0044				cline_175_0:			/* LN: 176 | CYCLE: 0 | RULES: () */ 
226   	 0044	 90750009		i0 = i7 - (0x9)			# LN: 176 | 
227   	 0045	 00004DC0		a0 = 0			# LN: 176 | 
228   	 0046	 98540000		xmem[i0] = a0h			# LN: 176 | 
229   	 0047	 88000074		do (0x80), label_end_92			# LN: 176 | 
230   	 0048				cline_176_0:			/* LN: 178 | CYCLE: 0 | RULES: () */ 
231   	 0048				label_begin_92:			/* LN: 176 | CYCLE: 0 | RULES: () */ 
232   	 0048	 90750007		i0 = i7 - (0x7)			# LN: 178 | 
233   	 0049	 88140000		a0 = xmem[i0]			# LN: 178 | 
234   	 004A	 90750003		i0 = i7 - (0x3)			# LN: 178 | 
235   	 004B	 89140000		a1 = xmem[i0]			# LN: 178 | 
236   	 004C	 00004480		a0 = a1 + a0			# LN: 178 | 
237   	 004D	 98090030		AnyReg(i0, a0h)			# LN: 178 | 
238   	 004E	 91750005		i1 = i7 - (0x5)			# LN: 178 | 
239   	 004F	 B0540001		xmem[i1] = i0			# LN: 178 | 
240   	 0050				cline_178_0:			/* LN: 179 | CYCLE: 0 | RULES: () */ 
241   	 0050	 90750006		i0 = i7 - (0x6)			# LN: 179 | 
242   	 0051	 B0140000		i0 = xmem[i0]			# LN: 179 | 
243   	 0052	 91750005		i1 = i7 - (0x5)			# LN: 179 | 
244   	 0053	 80940000		x0 = ymem[i0]			# LN: 179 | 
245   	 0054	 B0140001		i0 = xmem[i1]			# LN: 179 | 
246   	 0055	 91750008		i1 = i7 - (0x8)			# LN: 179 | 
247   	 0056	 88140001		a0 = xmem[i1]			# LN: 179 | 
248   	 0057	 81140000		x1 = xmem[i0]			# LN: 179 | 
249   	 0058	 00002088		a0 += x0 * x1			# LN: 179 | 
250   	 0059	 90750008		i0 = i7 - (0x8)			# LN: 179 | 
251   	 005A	 98540000		xmem[i0] = a0h			# LN: 179 | 
252   	 005B				cline_179_0:			/* LN: 181 | CYCLE: 0 | RULES: () */ 
253   	 005B	 90750007		i0 = i7 - (0x7)			# LN: 181 | 
254   	 005C	 88140000		a0 = xmem[i0]			# LN: 181 | 
255   	 005D	 894A0001		uhalfword(a1) = (0x1)			# LN: 181 | 
256   	 005E	 00004408		a0 = a0 + a1			# LN: 181 | 
257   	 005F	 90750007		i0 = i7 - (0x7)			# LN: 181 | 
258   	 0060	 98540000		xmem[i0] = a0h			# LN: 181 | 
259   	 0061	 90750007		i0 = i7 - (0x7)			# LN: 181 | 
260   	 0062	 88140000		a0 = xmem[i0]			# LN: 181 | 
261   	 0063	 894A0080		uhalfword(a1) = (0x80)			# LN: 181 | 
262   	 0064	 00004448		a0 = a0 - a1			# LN: 181 | 
263   	 0065	 8488006A		if (a < 0) jmp (else_1)			# LN: 181 | 
264   	 0066				cline_181_0:			/* LN: 183 | CYCLE: 0 | RULES: () */ 
265   	 0066	 90750007		i0 = i7 - (0x7)			# LN: 183 | 
266   	 0067	 00004DC0		a0 = 0			# LN: 183 | 
267   	 0068	 98540000		xmem[i0] = a0h			# LN: 183 | 
268   	 0069	 8008006A		jmp (endif_1)			# LN: 183 | 
269   	 006A				cline_183_0:			/* LN: 186 | CYCLE: 0 | RULES: () */ 
270   	 006A				endif_1:			/* LN: 181 | CYCLE: 0 | RULES: () */ 
271   	 006A				else_1:			/* LN: 181 | CYCLE: 0 | RULES: () */ 
272   	 006A	 90750006		i0 = i7 - (0x6)			# LN: 186 | 
273   	 006B	 B0140000		i0 = xmem[i0]			# LN: 186 | 
274   	 006C	 91750006		i1 = i7 - (0x6)			# LN: 186 | 
275   	 006D	 02107FFF		i0 -= 1			# LN: 186 | 
276   	 006E	 B0540001		xmem[i1] = i0			# LN: 186 | 
277   	 006F				cline_186_0:			/* LN: 176 | CYCLE: 0 | RULES: () */ 
278   	 006F				init_latch_label_0:			/* LN: 187 | CYCLE: 0 | RULES: () */ 
279   	 006F	 90750009		i0 = i7 - (0x9)			# LN: 176 | 
280   	 0070	 88140000		a0 = xmem[i0]			# LN: 176 | 
281   	 0071	 894A0001		uhalfword(a1) = (0x1)			# LN: 176 | 
282   	 0072	 00004408		a0 = a0 + a1			# LN: 176 | 
283   	 0073	 90750009		i0 = i7 - (0x9)			# LN: 176 | 
284   	 0074				label_end_92:			# LN: 176 | CYCLE: 5 | RULES: ()
285   	 0074	 98540000		xmem[i0] = a0h			# LN: 176 | 
286   	 0075				cline_176_1:			/* LN: 224 | CYCLE: 0 | RULES: () */ 
287   	 0075				for_end_0:			/* LN: 176 | CYCLE: 0 | RULES: () */ 
288   	 0075	 90750007		i0 = i7 - (0x7)			# LN: 224 | 
289   	 0076	 91750004		i1 = i7 - (0x4)			# LN: 224 | 
290   	 0077	 B1140001		i1 = xmem[i1]			# LN: 224 | 
291   	 0078	 88140000		a0 = xmem[i0]			# LN: 224 | 
292   	 0079	 98540001		xmem[i1] = a0h			# LN: 224 | 
293   	 007A				cline_224_0:			/* LN: 234 | CYCLE: 0 | RULES: () */ 
294   	 007A	 90750008		i0 = i7 - (0x8)			# LN: 234 | 
295   	 007B	 88140000		a0 = xmem[i0]			# LN: 234 | 
296   	 007C	 8008007D		jmp (__epilogue_212)			# LN: 234 | 
297   	 007D				cline_234_0:			/* LN: 238 | CYCLE: 0 | RULES: () */ 
298   	 007D				__epilogue_212:			/* LN: 238 | CYCLE: 0 | RULES: () */ 
299   	 007D	 97750009		i7 = i7 - (0x9)			# LN: 238 | 
300   	 007E	 02177FFF		i7 -= 1			# LN: 238 | 
301   	 007F	 81880000		ret			# LN: 238 | 
302   						
303   						
304   						
305   	 0080				_processing:			/* LN: 242 | CYCLE: 0 | RULES: () */ 
306   	 0080	 BB540007		xmem[i7] = i7			# LN: 242 | 
307   	 0081	 020F7FFF		i7 += 1			# LN: 242 | 
308   	 0082	 87750004		i7 = i7 + (0x4)			# LN: 242 | 
309   	 0083	 94750001		i4 = i7 - (0x1)			# LN: 242 | 
310   	 0084	 B0540004		xmem[i4] = i0			# LN: 242 | 
311   	 0085	 90750002		i0 = i7 - (0x2)			# LN: 242 | 
312   	 0086	 B1540000		xmem[i0] = i1			# LN: 242 | 
313   	 0087				cline_242_0:			/* LN: 246 | CYCLE: 0 | RULES: () */ 
314   	 0087	 88040000		a0 = xmem[__extractedConst_0_1 + 0]			# LN: 246 | 
315   	 0088	 90750003		i0 = i7 - (0x3)			# LN: 246 | 
316   	 0089	 98540000		xmem[i0] = a0h			# LN: 246 | 
317   	 008A				cline_246_0:			/* LN: 253 | CYCLE: 0 | RULES: () */ 
318   	 008A	 90750004		i0 = i7 - (0x4)			# LN: 253 | 
319   	 008B	 00004DC0		a0 = 0			# LN: 253 | 
320   	 008C	 98540000		xmem[i0] = a0h			# LN: 253 | 
321   	 008D	 81000131		do (0x10), label_end_93			# LN: 253 | 
322   	 008E				cline_253_0:			/* LN: 255 | CYCLE: 0 | RULES: () */ 
323   	 008E				label_begin_93:			/* LN: 253 | CYCLE: 0 | RULES: () */ 
324   	 008E	 90750001		i0 = i7 - (0x1)			# LN: 255 | 
325   	 008F	 B0140000		i0 = xmem[i0]			# LN: 255 | 
326   	 0090	 91750004		i1 = i7 - (0x4)			# LN: 255 | 
327   	 0091	 88140001		a0 = xmem[i1]			# LN: 255 | 
328   	 0092	 09707FFF		a1 = i0			# LN: 255 | 
329   	 0093	 90750001		i0 = i7 - (0x1)			# LN: 255 | 
330   	 0094	 B0140000		i0 = xmem[i0]			# LN: 255 | 
331   	 0095	 91750004		i1 = i7 - (0x4)			# LN: 255 | 
332   	 0096	 1C414480		b0 = xmem[i1]; a0 = a1 + a0			# LN: 255, 255 | 
333   	 0097	 09707FFF		a1 = i0			# LN: 255 | 
334   	 0098	 000044A1		a1 = a1 + b0			# LN: 255 | 
335   	 0099	 99090030		AnyReg(i0, a1h)			# LN: 255 | 
336   	 009A	 98090031		AnyReg(i1, a0h)			# LN: 255 | 
337   	 009B	 80940000		x0 = ymem[i0]			# LN: 255 | 
338   	 009C	 90750003		i0 = i7 - (0x3)			# LN: 255 | 
339   	 009D	 81140000		x1 = xmem[i0]			# LN: 255 | 
340   	 009E	 00002080		a0 = x0 * x1			# LN: 255 | 
341   	 009F	 88D40001		ymem[i1] = a0			# LN: 255 | 
342   	 00A0				cline_255_0:			/* LN: 256 | CYCLE: 0 | RULES: () */ 
343   	 00A0	 90750001		i0 = i7 - (0x1)			# LN: 256 | 
344   	 00A1	 B0140000		i0 = xmem[i0]			# LN: 256 | 
345   	 00A2	 91750004		i1 = i7 - (0x4)			# LN: 256 | 
346   	 00A3	 80050010		i0 = i0 + (0x10)			# LN: 256 | 
347   	 00A4	 88140001		a0 = xmem[i1]			# LN: 256 | 
348   	 00A5	 91750001		i1 = i7 - (0x1)			# LN: 256 | 
349   	 00A6	 B1140001		i1 = xmem[i1]			# LN: 256 | 
350   	 00A7	 09707FFF		a1 = i0			# LN: 256 | 
351   	 00A8	 80150010		i0 = i1 + (0x10)			# LN: 256 | 
352   	 00A9	 91750004		i1 = i7 - (0x4)			# LN: 256 | 
353   	 00AA	 1C414480		b0 = xmem[i1]; a0 = a1 + a0			# LN: 256, 256 | 
354   	 00AB	 09707FFF		a1 = i0			# LN: 256 | 
355   	 00AC	 000044A1		a1 = a1 + b0			# LN: 256 | 
356   	 00AD	 99090030		AnyReg(i0, a1h)			# LN: 256 | 
357   	 00AE	 98090031		AnyReg(i1, a0h)			# LN: 256 | 
358   	 00AF	 80940000		x0 = ymem[i0]			# LN: 256 | 
359   	 00B0	 90750003		i0 = i7 - (0x3)			# LN: 256 | 
360   	 00B1	 81140000		x1 = xmem[i0]			# LN: 256 | 
361   	 00B2	 00002080		a0 = x0 * x1			# LN: 256 | 
362   	 00B3	 88D40001		ymem[i1] = a0			# LN: 256 | 
363   	 00B4				cline_256_0:			/* LN: 266 | CYCLE: 0 | RULES: () */ 
364   	 00B4	 90750002		i0 = i7 - (0x2)			# LN: 266 | 
365   	 00B5	 B0140000		i0 = xmem[i0]			# LN: 266 | 
366   	 00B6	 91750004		i1 = i7 - (0x4)			# LN: 266 | 
367   	 00B7	 94750001		i4 = i7 - (0x1)			# LN: 266 | 
368   	 00B8	 B8140004		i4 = xmem[i4]			# LN: 266 | 
369   	 00B9	 95750004		i5 = i7 - (0x4)			# LN: 266 | 
370   	 00BA	 18454DC1		a0 = xmem[i5]; a1 = 0			# LN: 266, 266 | 
371   	 00BB	 0C787FFF		b0 = i4			# LN: 266 | 
372   	 00BC	 1D414420		b1 = xmem[i1]; a0 = a0 + b0			# LN: 266, 266 | 
373   	 00BD	 98090031		AnyReg(i1, a0h)			# LN: 266 | 
374   	 00BE	 08707FFF		a0 = i0			# LN: 266 | 
375   	 00BF	 284144A4		a0 = ymem[i1]; b0 = b1 + a0			# LN: 266, 266 | 
376   	 00C0	 9C090038		AnyReg(i4, b0h)			# LN: 266 | 
377   	 00C1	 80880000		call (_fir_circular)			# LN: 266 | 
378   	 00C2	 98540004		xmem[i4] = a0h			# LN: 266 | 
379   	 00C3				cline_266_0:			/* LN: 267 | CYCLE: 0 | RULES: () */ 
380   	 00C3	 90750002		i0 = i7 - (0x2)			# LN: 267 | 
381   	 00C4	 B0140000		i0 = xmem[i0]			# LN: 267 | 
382   	 00C5	 91750004		i1 = i7 - (0x4)			# LN: 267 | 
383   	 00C6	 80050010		i0 = i0 + (0x10)			# LN: 267 | 
384   	 00C7	 88140001		a0 = xmem[i1]			# LN: 267 | 
385   	 00C8	 09707FFF		a1 = i0			# LN: 267 | 
386   	 00C9	 90750001		i0 = i7 - (0x1)			# LN: 267 | 
387   	 00CA	 B0140000		i0 = xmem[i0]			# LN: 267 | 
388   	 00CB	 91750004		i1 = i7 - (0x4)			# LN: 267 | 
389   	 00CC	 1C414480		b0 = xmem[i1]; a0 = a1 + a0			# LN: 267, 267 | 
390   	 00CD	 09707FFF		a1 = i0			# LN: 267 | 
391   	 00CE	 000044A1		a1 = a1 + b0			# LN: 267 | 
392   	 00CF	 99090030		AnyReg(i0, a1h)			# LN: 267 | 
393   	 00D0	 98090031		AnyReg(i1, a0h)			# LN: 267 | 
394   	 00D1	 88940000		a0 = ymem[i0]			# LN: 267 | 
395   	 00D2	 98540001		xmem[i1] = a0h			# LN: 267 | 
396   	 00D3				cline_267_0:			/* LN: 268 | CYCLE: 0 | RULES: () */ 
397   	 00D3	 90750002		i0 = i7 - (0x2)			# LN: 268 | 
398   	 00D4	 B0140000		i0 = xmem[i0]			# LN: 268 | 
399   	 00D5	 91750004		i1 = i7 - (0x4)			# LN: 268 | 
400   	 00D6	 80050020		i0 = i0 + (0x20)			# LN: 268 | 
401   	 00D7	 88140001		a0 = xmem[i1]			# LN: 268 | 
402   	 00D8	 09707FFF		a1 = i0			# LN: 268 | 
403   	 00D9	 00004480		a0 = a1 + a0			# LN: 268 | 
404   	 00DA	 98090030		AnyReg(i0, a0h)			# LN: 268 | 
405   	 00DB	 91750001		i1 = i7 - (0x1)			# LN: 268 | 
406   	 00DC	 B1140001		i1 = xmem[i1]			# LN: 268 | 
407   	 00DD	 94750004		i4 = i7 - (0x4)			# LN: 268 | 
408   	 00DE	 88140004		a0 = xmem[i4]			# LN: 268 | 
409   	 00DF	 09717FFF		a1 = i1			# LN: 268 | 
410   	 00E0	 00004480		a0 = a1 + a0			# LN: 268 | 
411   	 00E1	 91750001		i1 = i7 - (0x1)			# LN: 268 | 
412   	 00E2	 B1140001		i1 = xmem[i1]			# LN: 268 | 
413   	 00E3	 98090038		AnyReg(i4, a0h)			# LN: 268 | 
414   	 00E4	 81150010		i1 = i1 + (0x10)			# LN: 268 | 
415   	 00E5	 95750004		i5 = i7 - (0x4)			# LN: 268 | 
416   	 00E6	 88140005		a0 = xmem[i5]			# LN: 268 | 
417   	 00E7	 09717FFF		a1 = i1			# LN: 268 | 
418   	 00E8	 29444480		a1 = ymem[i4]; a0 = a1 + a0			# LN: 268, 268 | 
419   	 00E9	 98090031		AnyReg(i1, a0h)			# LN: 268 | 
420   	 00EA	 00007FFF		nop #empty cycle
421   	 00EB	 88940001		a0 = ymem[i1]			# LN: 268 | 
422   	 00EC	 00004480		a0 = a1 + a0			# LN: 268 | 
423   	 00ED	 98540000		xmem[i0] = a0h			# LN: 268 | 
424   	 00EE				cline_268_0:			/* LN: 269 | CYCLE: 0 | RULES: () */ 
425   	 00EE	 90750002		i0 = i7 - (0x2)			# LN: 269 | 
426   	 00EF	 B0140000		i0 = xmem[i0]			# LN: 269 | 
427   	 00F0	 91750004		i1 = i7 - (0x4)			# LN: 269 | 
428   	 00F1	 80050030		i0 = i0 + (0x30)			# LN: 269 | 
429   	 00F2	 88140001		a0 = xmem[i1]			# LN: 269 | 
430   	 00F3	 91750001		i1 = i7 - (0x1)			# LN: 269 | 
431   	 00F4	 B1140001		i1 = xmem[i1]			# LN: 269 | 
432   	 00F5	 09707FFF		a1 = i0			# LN: 269 | 
433   	 00F6	 80150010		i0 = i1 + (0x10)			# LN: 269 | 
434   	 00F7	 91750004		i1 = i7 - (0x4)			# LN: 269 | 
435   	 00F8	 1C414480		b0 = xmem[i1]; a0 = a1 + a0			# LN: 269, 269 | 
436   	 00F9	 09707FFF		a1 = i0			# LN: 269 | 
437   	 00FA	 000044A1		a1 = a1 + b0			# LN: 269 | 
438   	 00FB	 99090030		AnyReg(i0, a1h)			# LN: 269 | 
439   	 00FC	 98090031		AnyReg(i1, a0h)			# LN: 269 | 
440   	 00FD	 88940000		a0 = ymem[i0]			# LN: 269 | 
441   	 00FE	 98540001		xmem[i1] = a0h			# LN: 269 | 
442   	 00FF				cline_269_0:			/* LN: 270 | CYCLE: 0 | RULES: () */ 
443   	 00FF	 90750002		i0 = i7 - (0x2)			# LN: 270 | 
444   	 0100	 B0140000		i0 = xmem[i0]			# LN: 270 | 
445   	 0101	 91750001		i1 = i7 - (0x1)			# LN: 270 | 
446   	 0102	 80050040		i0 = i0 + (0x40)			# LN: 270 | 
447   	 0103	 B1140001		i1 = xmem[i1]			# LN: 270 | 
448   	 0104	 94750004		i4 = i7 - (0x4)			# LN: 270 | 
449   	 0105	 81150010		i1 = i1 + (0x10)			# LN: 270 | 
450   	 0106	 95750004		i5 = i7 - (0x4)			# LN: 270 | 
451   	 0107	 88140005		a0 = xmem[i5]			# LN: 270 | 
452   	 0108	 09717FFF		a1 = i1			# LN: 270 | 
453   	 0109	 1C444480		b0 = xmem[i4]; a0 = a1 + a0			# LN: 270, 270 | 
454   	 010A	 98090031		AnyReg(i1, a0h)			# LN: 270 | 
455   	 010B	 08707FFF		a0 = i0			# LN: 270 | 
456   	 010C	 28414424		a0 = ymem[i1]; b0 = b0 + a0			# LN: 270, 270 | 
457   	 010D	 894A0001		uhalfword(a1) = (0x1)			# LN: 270 | 
458   	 010E	 9C090038		AnyReg(i4, b0h)			# LN: 270 | 
459   	 010F	 80880000		call (_fir_circular)			# LN: 270 | 
460   	 0110	 98540004		xmem[i4] = a0h			# LN: 270 | 
461   	 0111				cline_270_0:			/* LN: 271 | CYCLE: 0 | RULES: () */ 
462   	 0111	 90750002		i0 = i7 - (0x2)			# LN: 271 | 
463   	 0112	 B0140000		i0 = xmem[i0]			# LN: 271 | 
464   	 0113	 91750004		i1 = i7 - (0x4)			# LN: 271 | 
465   	 0114	 80050050		i0 = i0 + (0x50)			# LN: 271 | 
466   	 0115	 88140001		a0 = xmem[i1]			# LN: 271 | 
467   	 0116	 09707FFF		a1 = i0			# LN: 271 | 
468   	 0117	 00004480		a0 = a1 + a0			# LN: 271 | 
469   	 0118	 90750002		i0 = i7 - (0x2)			# LN: 271 | 
470   	 0119	 B0140000		i0 = xmem[i0]			# LN: 271 | 
471   	 011A	 98090031		AnyReg(i1, a0h)			# LN: 271 | 
472   	 011B	 80050040		i0 = i0 + (0x40)			# LN: 271 | 
473   	 011C	 94750004		i4 = i7 - (0x4)			# LN: 271 | 
474   	 011D	 88140004		a0 = xmem[i4]			# LN: 271 | 
475   	 011E	 09707FFF		a1 = i0			# LN: 271 | 
476   	 011F	 00004480		a0 = a1 + a0			# LN: 271 | 
477   	 0120	 98090030		AnyReg(i0, a0h)			# LN: 271 | 
478   	 0121	 94750002		i4 = i7 - (0x2)			# LN: 271 | 
479   	 0122	 B8140004		i4 = xmem[i4]			# LN: 271 | 
480   	 0123	 95750004		i5 = i7 - (0x4)			# LN: 271 | 
481   	 0124	 88140005		a0 = xmem[i5]			# LN: 271 | 
482   	 0125	 09787FFF		a1 = i4			# LN: 271 | 
483   	 0126	 19404480		a1 = xmem[i0]; a0 = a1 + a0			# LN: 271, 271 | 
484   	 0127	 98090030		AnyReg(i0, a0h)			# LN: 271 | 
485   	 0128	 00007FFF		nop #empty cycle
486   	 0129	 88140000		a0 = xmem[i0]			# LN: 271 | 
487   	 012A	 00004480		a0 = a1 + a0			# LN: 271 | 
488   	 012B	 98540001		xmem[i1] = a0h			# LN: 271 | 
489   	 012C				cline_271_0:			/* LN: 253 | CYCLE: 0 | RULES: () */ 
490   	 012C				init_latch_label_1:			/* LN: 273 | CYCLE: 0 | RULES: () */ 
491   	 012C	 90750004		i0 = i7 - (0x4)			# LN: 253 | 
492   	 012D	 88140000		a0 = xmem[i0]			# LN: 253 | 
493   	 012E	 894A0001		uhalfword(a1) = (0x1)			# LN: 253 | 
494   	 012F	 00004408		a0 = a0 + a1			# LN: 253 | 
495   	 0130	 90750004		i0 = i7 - (0x4)			# LN: 253 | 
496   	 0131				label_end_93:			# LN: 253 | CYCLE: 5 | RULES: ()
497   	 0131	 98540000		xmem[i0] = a0h			# LN: 253 | 
498   	 0132				cline_253_1:			/* LN: 315 | CYCLE: 0 | RULES: () */ 
499   	 0132				for_end_1:			/* LN: 253 | CYCLE: 0 | RULES: () */ 
500   	 0132	 80080133		jmp (__epilogue_214)			# LN: 315 | 
501   	 0133				__epilogue_214:			/* LN: 315 | CYCLE: 0 | RULES: () */ 
502   	 0133	 97750004		i7 = i7 - (0x4)			# LN: 315 | 
503   	 0134	 02177FFF		i7 -= 1			# LN: 315 | 
504   	 0135	 81880000		ret			# LN: 315 | 
505   						(null)
				 SYMBOL TABLE 

    Name                                                                                    Type                  Value 

_COMMON_INC_PATH_                                                               					 Define                 "C:/CirrusDSP/crystal32/common/inc/"
_DSP_                                                                           					 Define                 "a"
_LOCAL_INC_PATH_                                                                					 Define                 "inc/"
_LOCAL_SRC_PATH_                                                                					 Define                 "src/"
_MUI_VERSION_                                                                   					 Define                 "020000"
_OVLY_                                                                          					 Define                 "standalone"
_OVLY_REVISION_                                                                 					 Define                 "020000"
_ROUTER_INC_PATH_                                                               					 Define                 "rom_inc/"
_SLOT_                                                                          					 Define                 "0"
_TARGET_FAMILY_                                                                 					 Define                 "crystal32"
_TOOLS_VERSION_                                                                 					 Define                 "0x0701"
_VERSION_                                                                       					 Define                 "00"
__CASM_VER__                                                                    			  Unused Variable		        0 (701H)
__epilogue_212                                                                  			         Relocatable         common_GEN_0002:007DH
__epilogue_214                                                                  			         Relocatable         common_GEN_0002:0133H
__extractedConst_0_1                                                            			         Relocatable         common_GEN_0000:0000H
_coeffs                                                                         			  Public Relocatable       common_GEN_0001:0000H
_fir_circular                                                                   			  Public Relocatable       common_GEN_0002:0000H
_history_global                                                                 					 External   
_p_state_global                                                                 					 External   
_processing                                                                     			  Public Relocatable       common_GEN_0002:0080H
cline_141_0                                                                     			  Unused Relocatable        common_GEN_0002:0007H
cline_145_0                                                                     			  Unused Relocatable        common_GEN_0002:0010H
cline_146_0                                                                     			  Unused Relocatable        common_GEN_0002:0016H
cline_152_0                                                                     			  Unused Relocatable        common_GEN_0002:001AH
cline_153_0                                                                     			  Unused Relocatable        common_GEN_0002:001DH
cline_155_0                                                                     			  Unused Relocatable        common_GEN_0002:0022H
cline_162_0                                                                     			  Unused Relocatable        common_GEN_0002:002AH
cline_163_0                                                                     			  Unused Relocatable        common_GEN_0002:002FH
cline_166_0                                                                     			  Unused Relocatable        common_GEN_0002:003AH
cline_168_0                                                                     			  Unused Relocatable        common_GEN_0002:003EH
cline_172_0                                                                     			  Unused Relocatable        common_GEN_0002:0041H
cline_175_0                                                                     			  Unused Relocatable        common_GEN_0002:0044H
cline_176_0                                                                     			  Unused Relocatable        common_GEN_0002:0048H
cline_176_1                                                                     			  Unused Relocatable        common_GEN_0002:0075H
cline_178_0                                                                     			  Unused Relocatable        common_GEN_0002:0050H
cline_179_0                                                                     			  Unused Relocatable        common_GEN_0002:005BH
cline_181_0                                                                     			  Unused Relocatable        common_GEN_0002:0066H
cline_183_0                                                                     			  Unused Relocatable        common_GEN_0002:006AH
cline_186_0                                                                     			  Unused Relocatable        common_GEN_0002:006FH
cline_224_0                                                                     			  Unused Relocatable        common_GEN_0002:007AH
cline_234_0                                                                     			  Unused Relocatable        common_GEN_0002:007DH
cline_242_0                                                                     			  Unused Relocatable        common_GEN_0002:0087H
cline_246_0                                                                     			  Unused Relocatable        common_GEN_0002:008AH
cline_253_0                                                                     			  Unused Relocatable        common_GEN_0002:008EH
cline_253_1                                                                     			  Unused Relocatable        common_GEN_0002:0132H
cline_255_0                                                                     			  Unused Relocatable        common_GEN_0002:00A0H
cline_256_0                                                                     			  Unused Relocatable        common_GEN_0002:00B4H
cline_266_0                                                                     			  Unused Relocatable        common_GEN_0002:00C3H
cline_267_0                                                                     			  Unused Relocatable        common_GEN_0002:00D3H
cline_268_0                                                                     			  Unused Relocatable        common_GEN_0002:00EEH
cline_269_0                                                                     			  Unused Relocatable        common_GEN_0002:00FFH
cline_270_0                                                                     			  Unused Relocatable        common_GEN_0002:0111H
cline_271_0                                                                     			  Unused Relocatable        common_GEN_0002:012CH
else_0                                                                          			         Relocatable         common_GEN_0002:003EH
else_1                                                                          			         Relocatable         common_GEN_0002:006AH
endif_0                                                                         			         Relocatable         common_GEN_0002:003EH
endif_1                                                                         			         Relocatable         common_GEN_0002:006AH
for_end_0                                                                       			  Unused Relocatable        common_GEN_0002:0075H
for_end_1                                                                       			  Unused Relocatable        common_GEN_0002:0132H
init_latch_label_0                                                              			  Unused Relocatable        common_GEN_0002:006FH
init_latch_label_1                                                              			  Unused Relocatable        common_GEN_0002:012CH
label_begin_92                                                                  			  Unused Relocatable        common_GEN_0002:0048H
label_begin_93                                                                  			  Unused Relocatable        common_GEN_0002:008EH
label_end_92                                                                    			         Relocatable         common_GEN_0002:0074H
label_end_93                                                                    			         Relocatable         common_GEN_0002:0131H

	       SEGMENTS:

Size			  Name										 Class
0000H	 __INIT                                  			 CODE                                    
0001H	 common_GEN_0000                         			 X_OVLY                                  
0080H	 common_GEN_0001                         			 Y_OVLY                                  
0136H	 common_GEN_0002                         			 CODE_OVLY                               
