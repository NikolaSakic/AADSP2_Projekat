#include "common.h"
#include <dsplib\wavefile.h>

#define IN_CHANNELS 2
#define OUT_CHANNELS 6

__memY DSPfract sampleBuffer[MAX_NUM_CHANNEL][BLOCK_SIZE];
__memX DSPfract outputSampleBuffer[MAX_NUM_CHANNEL][BLOCK_SIZE];

DSPfract history_global[2][n_coeff];
unsigned int p_state_global[2];

//ENABLE_STATE enable;
//OUTPUT_MODE outputMode;
DSPint InputGain;




DSPint main(int argc, char* argv[])
{
		WAVREAD_HANDLE *wav_in;
		WAVWRITE_HANDLE *wav_out;

		char WavInputName[256];
		char WavOutputName[256];

	    int nChannels;
		int bitsPerSample;
	    int sampleRate;
	    int iNumSamples;

	    int i;
		for(i=0; i < n_coeff; i++){ history_global[0][i] = FRACT_NUM(0.0);}
		for(i=0; i < Ntap; i++){ history_global[1][i] = FRACT_NUM(0.0);}
		p_state_global[0] = 0;
		p_state_global[1] = 0;

		// Open input wav file
		//-------------------------------------------------
		strcpy(WavInputName,"../../TestStreams/MyWhiteNoise.wav");
		wav_in = cl_wavread_open(WavInputName);
		if(wav_in == NULL)
	    {
	        printf("Error: Could not open input wavefile.\n");
	        return -1;
	    }
		//-------------------------------------------------

		// Read input wav header
		//-------------------------------------------------
		nChannels = cl_wavread_getnchannels(wav_in);
	    bitsPerSample = cl_wavread_bits_per_sample(wav_in);
	    sampleRate = cl_wavread_frame_rate(wav_in);
	    iNumSamples =  cl_wavread_number_of_frames(wav_in);
		//-------------------------------------------------

		// Open output wav file
		//-------------------------------------------------
		strcpy(WavOutputName,"../OutStreams/MyWhiteNoise.wav");
		wav_out = cl_wavwrite_open(WavOutputName, bitsPerSample, OUT_CHANNELS, sampleRate);
		if(!wav_out)
	    {
	        printf("Error: Could not open output wavefile.\n");
	        return -1;
	    }
		//-------------------------------------------------


		// Initialize echo
		//-------------------------------------------------

		//-------------------------------------------------


		// Processing loop
		//-------------------------------------------------
	    {
			int i;
			int j;
			int k;
			int sample;
			int bound = iNumSamples/BLOCK_SIZE;

			for(i=0; i< bound; i++)
			{
				for(j=0; j<BLOCK_SIZE; j++)
				{
					for(k=0; k<nChannels; k++)
					{
						sample = cl_wavread_recvsample(wav_in);
						sampleBuffer[k][j] = rbits(sample);
					}
				}

				// Do processing...
				// Your code here...
				// Initialize echo
				//-------------------------------------------------
				processing(sampleBuffer, outputSampleBuffer);
				//-------------------------------------------------


				for(j=0; j<BLOCK_SIZE; j++)
				{
					for(k=0; k<OUT_CHANNELS; k++)
					{
						sample = bitsr(outputSampleBuffer[k][j]);
						cl_wavwrite_sendsample(wav_out, sample);
					}
				}
			}
		}

		// Close files
		//-------------------------------------------------
	    cl_wavread_close(wav_in);
	    cl_wavwrite_close(wav_out);
		//-------------------------------------------------

	    return 0;
}
